<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>سلة التسوق</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-color: #1e40af;
            --primary-dark: #1e3a8a;
            --success-color: #10b981;
            --danger-color: #ef4444;
            --warning-color: #f59e0b;
            --background: #f8fafc;
            --surface: #ffffff;
            --surface-variant: #f1f5f9;
            --on-surface: #1e293b;
            --on-surface-variant: #64748b;
            --border: #e2e8f0;
            --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            --border-radius: 12px;
            --border-radius-lg: 16px;
            --transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, var(--background) 0%, #e2e8f0 100%);
            color: var(--on-surface);
            line-height: 1.6;
            min-height: 100vh;
            padding-bottom: 100px;
        }

        /* Header */
        .cart-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            backdrop-filter: blur(10px);
            box-shadow: var(--shadow);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 16px 20px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .header-btn {
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: white;
            width: 44px;
            height: 44px;
            border-radius: 50%;
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
            backdrop-filter: blur(10px);
        }

            .header-btn:hover {
                background: rgba(255, 255, 255, 0.2);
                transform: scale(1.05);
            }

            .header-btn:active {
                transform: scale(0.95);
            }

        .header-title {
            color: white;
            font-size: 20px;
            font-weight: 600;
        }

        /* Main Container */
        .main-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Cart Summary */
        .cart-summary {
            background: var(--surface);
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow);
            padding: 24px;
            margin-bottom: 24px;
            border: 1px solid var(--border);
        }

        .summary-header {
            display: flex;
            align-items: center;
            gap: 12px;
            color: var(--primary-color);
            font-size: 24px;
            font-weight: 700;
            margin-bottom: 8px;
        }

        .summary-details {
            color: var(--on-surface-variant);
            font-size: 16px;
        }

        /* Empty Cart State */
        .empty-cart {
            text-align: center;
            padding: 60px 20px;
            background: var(--surface);
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow);
        }

        .empty-cart-icon {
            font-size: 64px;
            color: var(--on-surface-variant);
            margin-bottom: 16px;
            opacity: 0.5;
        }

        .empty-cart h2 {
            color: var(--on-surface);
            margin-bottom: 8px;
            font-weight: 600;
        }

        .empty-cart p {
            color: var(--on-surface-variant);
            font-size: 16px;
        }

        /* Cart Items */
        .cart-items {
            display: flex;
            flex-direction: column;
            gap: 16px;
        }

        .cart-item {
            background: var(--surface);
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow);
            border: 1px solid var(--border);
            overflow: hidden;
            transition: var(--transition);
            position: relative;
        }

            .cart-item:hover {
                box-shadow: var(--shadow-lg);
                transform: translateY(-1px);
            }

        .item-main {
            padding: 20px;
        }

        .item-info {
            display: flex;
            gap: 16px;
            margin-bottom: 16px;
        }

        .item-image {
            flex-shrink: 0;
            width: 80px;
            height: 80px;
            border-radius: var(--border-radius);
            overflow: hidden;
            background: var(--surface-variant);
        }

            .item-image img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: var(--transition);
            }

            .item-image:hover img {
                transform: scale(1.05);
            }

        .item-details {
            flex: 1;
            min-width: 0;
        }

        .item-name {
            font-size: 18px;
            font-weight: 600;
            color: var(--on-surface);
            margin-bottom: 4px;
            line-height: 1.4;
        }

        .item-description {
            color: var(--on-surface-variant);
            font-size: 14px;
            line-height: 1.4;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        /* Item Controls */
        .item-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 16px;
        }

        .quantity-control {
            display: flex;
            align-items: center;
            background: var(--surface-variant);
            border-radius: var(--border-radius);
            border: 1px solid var(--border);
            overflow: hidden;
        }

        .quantity-btn {
            background: none;
            border: none;
            color: var(--primary-color);
            width: 40px;
            height: 40px;
            cursor: pointer;
            transition: var(--transition);
            font-size: 16px;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .quantity-btn:hover {
                background: var(--primary-color);
                color: white;
            }

            .quantity-btn:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

        .quantity-input {
            width: 60px;
            text-align: center;
            border: none;
            background: none;
            font-weight: 600;
            font-size: 16px;
            color: var(--on-surface);
            height: 40px;
        }

        .item-price {
            font-size: 20px;
            font-weight: 700;
            color: var(--primary-color);
        }

        .remove-btn {
            background: rgba(239, 68, 68, 0.1);
            border: 1px solid rgba(239, 68, 68, 0.2);
            color: var(--danger-color);
            width: 40px;
            height: 40px;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .remove-btn:hover {
                background: var(--danger-color);
                color: white;
                transform: scale(1.05);
            }

        /* Toppings Section */
        .toppings-section {
            border-top: 1px solid var(--border);
            background: var(--surface-variant);
        }

        .toppings-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 16px 20px;
            cursor: pointer;
            transition: var(--transition);
        }

            .toppings-header:hover {
                background: rgba(30, 64, 175, 0.05);
            }

        .toppings-preview {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .toppings-title {
            font-weight: 600;
            color: var(--on-surface);
            font-size: 16px;
        }

        .toppings-thumbnails {
            display: flex;
            align-items: center;
            gap: -8px;
        }

        .topping-thumb {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            border: 2px solid white;
            object-fit: cover;
            margin-left: -8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

            .topping-thumb:first-child {
                margin-left: 0;
            }

        .more-toppings {
            background: var(--primary-color);
            color: white;
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            font-weight: 600;
            margin-left: -8px;
        }

        .toggle-btn {
            background: none;
            border: none;
            color: var(--primary-color);
            cursor: pointer;
            padding: 4px;
            border-radius: 4px;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 500;
        }

            .toggle-btn i {
                transition: transform 0.2s ease;
            }

            .toggle-btn.open i {
                transform: rotate(180deg);
            }

        .toppings-content {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease-out;
        }

            .toppings-content.open {
                max-height: 300px;
            }

        .toppings-list {
            padding: 0 20px 16px;
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .topping-item {
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 8px;
            background: white;
            border-radius: var(--border-radius);
            border: 1px solid var(--border);
        }

        .topping-image {
            width: 40px;
            height: 40px;
            border-radius: var(--border-radius);
            object-fit: cover;
        }

        .topping-details {
            flex: 1;
        }

        .topping-name {
            font-weight: 600;
            color: var(--on-surface);
            margin-bottom: 2px;
            font-size: 14px;
        }

        .topping-price {
            color: var(--on-surface-variant);
            font-size: 13px;
        }

        /* Checkout Button */
        .checkout-container {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 16px 20px;
            background: linear-gradient(to top, white 0%, rgba(255,255,255,0.95) 100%);
            backdrop-filter: blur(10px);
            border-top: 1px solid var(--border);
            z-index: 50;
        }

        .checkout-btn {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            color: white;
            border: none;
            border-radius: var(--border-radius-lg);
            padding: 16px 24px;
            cursor: pointer;
            transition: var(--transition);
            box-shadow: var(--shadow-lg);
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 18px;
            font-weight: 600;
        }

            .checkout-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
            }

            .checkout-btn:active {
                transform: translateY(0);
            }

        .checkout-left {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .checkout-badge {
            background: white;
            color: var(--primary-color);
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 700;
            font-size: 14px;
        }

        .checkout-text {
            font-size: 18px;
            font-weight: 600;
        }

        .checkout-price {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 20px;
            font-weight: 700;
        }

        /* Loading State */
        .loading {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 40px;
        }

        .spinner {
            width: 32px;
            height: 32px;
            border: 3px solid var(--border);
            border-top: 3px solid var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0%

        {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }

        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .main-container

        {
            padding: 16px;
        }

        .item-info {
            gap: 12px;
        }

        .item-image {
            width: 64px;
            height: 64px;
        }

        .item-name {
            font-size: 16px;
        }

        .item-price {
            font-size: 18px;
        }

        .checkout-btn {
            padding: 14px 20px;
        }

        .checkout-text {
            font-size: 16px;
        }

        .checkout-price {
            font-size: 18px;
        }

        }

        /* Animations */
        .cart-item {
            animation: slideInUp 0.3s ease-out;
        }

        @@keyframes slideInUp {
            from

        {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .fade-out {
            animation: fadeOut 0.3s ease-out forwards;
        }

        @@keyframes fadeOut {
            from

        {
            opacity: 1;
            transform: scale(1);
        }

        to {
            opacity: 0;
            transform: scale(0.95);
        }

        }
    </style>
</head>

<body>
    <header class="cart-header">
        <div class="header-container">
            <button class="header-btn" onclick="window.location.href='index.html'" aria-label="العودة">
                <i class="fa-solid fa-chevron-right"></i>
            </button>
            <h1 class="header-title">سلة التسوق</h1>
            <button class="header-btn" onclick="clearCart()" aria-label="إفراغ السلة">
                <i class="fa-solid fa-trash-can"></i>
            </button>
        </div>
    </header>

    <main class="main-container">
        <div class="cart-summary">
            <div class="summary-header">
                <i class="fas fa-shopping-cart"></i>
                <span class="total-items">0</span>
                <span>عنصر في السلة</span>
            </div>
            <div class="summary-details">
                المجموع: <span class="total-price">0.00</span> جنيه
            </div>
        </div>

        <div class="cart-content">
            <div class="loading">
                <div class="spinner"></div>
            </div>
        </div>
    </main>

    <div class="checkout-container">
        <a asp-action="Checkout" class="checkout-btn">
            <div class="checkout-left">
                <span class="checkout-badge total-items">0</span>
                <span class="checkout-text">اذهب للدفع</span>
            </div>
            <div class="checkout-price">
                <span class="total-price">0.00</span>
                <span>جنيه</span>
                <i class="fa-solid fa-arrow-left"></i>
            </div>
        </a>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const cartContent = document.querySelector(".cart-content");
            const totalItemsEls = document.querySelectorAll(".total-items");
            const totalPriceEls = document.querySelectorAll(".total-price");

            const CART_KEY = "food_ecom_cart";
            let cart = [];
            let rawCart = [];

            // Initialize cart
            const initCart = () => {
                try {
                    rawCart = JSON.parse(localStorage.getItem(CART_KEY)) || [];

                    cart = rawCart.map(item => {
                        const toppings = item.SelectedToppingGroups?.flatMap(g =>
                            g.SelectedToppingOptions.map(opt => ({
                                name: opt.Name,
                                price: opt.PriceAtOrderTime,
                                image: opt.ImageUrl,
                                count: opt.Quantity
                            }))
                        ) || [];

                        const toppingsTotal = toppings.reduce((sum, t) => sum + t.price * t.count, 0);
                        const totalPrice = (item.PriceAtOrderTime + toppingsTotal) * item.Quantity;

                        return {
                            title: item.Title,
                            description: item.Description,
                            image: item.ThumbnailUrl,
                            price: item.PriceAtOrderTime,
                            selectedCount: item.Quantity,
                            totalPrice: totalPrice,
                            toppings: toppings,
                            currency: "جنيه"
                        };
                    });

                    setTimeout(renderCart, 500); // Simulate loading
                } catch (error) {
                    console.error('Error loading cart:', error);
                    setTimeout(renderCart, 500);
                }
            };

            // Render cart
            const renderCart = () => {
                if (cart.length === 0) {
                    cartContent.innerHTML = `
                        <div class="empty-cart">
                            <div class="empty-cart-icon">
                                <i class="fas fa-shopping-cart"></i>
                            </div>
                            <h2>سلة التسوق فارغة</h2>
                            <p>لم تقم بإضافة أي منتجات بعد</p>
                        </div>
                    `;
                    updateTotals(0, 0);
                    return;
                }

                let totalItems = 0;
                let totalPrice = 0;

                const cartHTML = cart.map((item, idx) => {
                    totalItems += item.selectedCount;
                    totalPrice += item.totalPrice;

                    const toppingsHTML = (item.toppings || []).map(topping => `
                        <div class="topping-item">
                            <img src="${topping.image}" alt="${topping.name}" class="topping-image">
                            <div class="topping-details">
                                <div class="topping-name">${topping.name}</div>
                                <div class="topping-price">${topping.price} ${item.currency} × ${topping.count}</div>
                            </div>
                        </div>
                    `).join('');

                    const toppingsPreview = (item.toppings || []).slice(0, 3).map((t, i) =>
                        `<img src="${t.image}" alt="${t.name}" class="topping-thumb">`
                    ).join('');

                    const moreCount = (item.toppings?.length || 0) - 3;

                    return `
                        <div class="cart-item" data-index="${idx}">
                            <div class="item-main">
                                <div class="item-info">
                                    <div class="item-image">
                                        <img src="${item.image}" alt="${item.title}">
                                    </div>
                                    <div class="item-details">
                                        <div class="item-name">${item.title}</div>
                                        <div class="item-description">${item.description}</div>
                                    </div>
                                </div>

                                <div class="item-controls">
                                    <div class="quantity-control">
                                        <button class="quantity-btn decrement" data-index="${idx}" ${item.selectedCount <= 1 ? 'disabled' : ''}>
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <input type="text" class="quantity-input" value="${item.selectedCount}" readonly>
                                        <button class="quantity-btn increment" data-index="${idx}">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>

                                    <div class="item-price">
                                        ${item.totalPrice.toFixed(2)} ${item.currency}
                                    </div>

                                    <button class="remove-btn" data-index="${idx}" aria-label="حذف العنصر">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </div>

                            ${(item.toppings?.length || 0) > 0 ? `
                                <div class="toppings-section">
                                    <div class="toppings-header" onclick="toggleToppings(${idx})">
                                        <div class="toppings-preview">
                                            <div class="toppings-title">الإضافات (${item.toppings.length})</div>
                                            <div class="toppings-thumbnails">
                                                ${toppingsPreview}
                                                ${moreCount > 0 ? `<div class="more-toppings">+${moreCount}</div>` : ''}
                                            </div>
                                        </div>
                                        <button class="toggle-btn" data-index="${idx}">
                                            <span>عرض التفاصيل</span>
                                            <i class="fas fa-chevron-down"></i>
                                        </button>
                                    </div>
                                    <div class="toppings-content" data-index="${idx}">
                                        <div class="toppings-list">
                                            ${toppingsHTML}
                                        </div>
                                    </div>
                                </div>
                            ` : ''}
                        </div>
                    `;
                }).join('');

                cartContent.innerHTML = `<div class="cart-items">${cartHTML}</div>`;
                updateTotals(totalItems, totalPrice);
            };

            // Update totals
            const updateTotals = (items, price) => {
                totalItemsEls.forEach(el => el.textContent = items);
                totalPriceEls.forEach(el => el.textContent = price.toFixed(2));
            };

            // Save cart to localStorage
            const saveCart = () => {
                try {
                    // Update rawCart with new quantities
                    cart.forEach((item, idx) => {
                        if (rawCart[idx]) {
                            rawCart[idx].Quantity = item.selectedCount;
                        }
                    });
                    localStorage.setItem(CART_KEY, JSON.stringify(rawCart));
                } catch (error) {
                    console.error('Error saving cart:', error);
                }
            };

            // Handle quantity changes and removals
            cartContent.addEventListener("click", e => {
                const idx = parseInt(e.target.closest('[data-index]')?.dataset.index);
                if (idx === undefined || idx < 0 || idx >= cart.length) return;

                if (e.target.closest('.increment')) {
                    cart[idx].selectedCount++;
                    const toppingsTotal = (cart[idx].toppings || []).reduce((sum, t) => sum + t.price * t.count, 0);
                    cart[idx].totalPrice = (cart[idx].price + toppingsTotal) * cart[idx].selectedCount;
                    saveCart();
                    renderCart();
                } else if (e.target.closest('.decrement')) {
                    if (cart[idx].selectedCount > 1) {
                        cart[idx].selectedCount--;
                        const toppingsTotal = (cart[idx].toppings || []).reduce((sum, t) => sum + t.price * t.count, 0);
                        cart[idx].totalPrice = (cart[idx].price + toppingsTotal) * cart[idx].selectedCount;
                        saveCart();
                        renderCart();
                    }
                } else if (e.target.closest('.remove-btn')) {
                    if (confirm("هل تريد حذف هذا العنصر من السلة؟")) {
                        const itemElement = e.target.closest('.cart-item');
                        itemElement.classList.add('fade-out');

                        setTimeout(() => {
                            cart.splice(idx, 1);
                            rawCart.splice(idx, 1);
                            saveCart();
                            renderCart();
                        }, 300);
                    }
                }
            });

            // Toggle toppings visibility
            window.toggleToppings = (idx) => {
                const content = document.querySelector(`.toppings-content[data-index="${idx}"]`);
                const button = document.querySelector(`.toggle-btn[data-index="${idx}"]`);

                if (content && button) {
                    const isOpen = content.classList.contains('open');
                    content.classList.toggle('open');
                    button.classList.toggle('open');

                    const span = button.querySelector('span');
                    if (span) {
                        span.textContent = isOpen ? 'عرض التفاصيل' : 'إخفاء التفاصيل';
                    }
                }
            };

            // Clear cart
            window.clearCart = () => {
                if (cart.length === 0) return;

                if (confirm("هل تريد إفراغ سلة التسوق بالكامل؟")) {
                    cart = [];
                    rawCart = [];
                    localStorage.removeItem(CART_KEY);
                    renderCart();
                }
            };

            // Initialize
            initCart();
        });
    </script>
</body>
</html>